<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NjdbAgAAAABJRU5ErkJggg==
</value>
  </data>
</root>